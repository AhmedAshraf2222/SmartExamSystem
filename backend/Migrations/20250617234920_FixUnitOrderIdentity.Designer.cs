// <auto-generated />
using System;
using Graduation_proj.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Graduation_proj.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250617234920_FixUnitOrderIdentity")]
    partial class FixUnitOrderIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Graduation_proj.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Graduation_proj.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<string>("CollegeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamDuration")
                        .HasColumnType("int");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MainDegree")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<bool>("Shuffle")
                        .HasColumnType("bit");

                    b.Property<int>("TotalProblems")
                        .HasColumnType("int");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ExamId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Graduation_proj.Models.ExamUnit", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UnitOrder")
                        .HasColumnType("int");

                    b.Property<int>("AllProblems")
                        .HasColumnType("int");

                    b.Property<int>("MainDegree")
                        .HasColumnType("int");

                    b.Property<bool>("Shuffle")
                        .HasColumnType("bit");

                    b.Property<int>("TotalProblems")
                        .HasColumnType("int");

                    b.HasKey("ExamId", "GroupId", "UnitOrder");

                    b.HasIndex("GroupId");

                    b.ToTable("ExamUnits");
                });

            modelBuilder.Entity("Graduation_proj.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("CommonQuestionHeader")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("HasCommonHeader")
                        .HasColumnType("bit");

                    b.Property<int>("MainDegree")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("TotalProblems")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("TopicId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Graduation_proj.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Graduation_proj.Models.Problem", b =>
                {
                    b.Property<int>("ProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProblemId"));

                    b.Property<int>("ChoicesNumber")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("MainDegree")
                        .HasColumnType("int");

                    b.Property<string>("ProblemHeader")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("ProblemImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProblemName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("RightAnswer")
                        .HasColumnType("int");

                    b.Property<bool>("Shuffle")
                        .HasColumnType("bit");

                    b.HasKey("ProblemId");

                    b.HasIndex("GroupId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("Graduation_proj.Models.ProblemChoice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoiceId"));

                    b.Property<string>("ChoiceImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choices")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<int>("UnitOrder")
                        .HasColumnType("int");

                    b.HasKey("ChoiceId");

                    b.HasIndex("ProblemId");

                    b.ToTable("ProblemChoices");
                });

            modelBuilder.Entity("Graduation_proj.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"));

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("TopicId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Graduation_proj.Models.Exam", b =>
                {
                    b.HasOne("Graduation_proj.Models.Material", "Material")
                        .WithMany("Exams")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Graduation_proj.Models.ExamUnit", b =>
                {
                    b.HasOne("Graduation_proj.Models.Exam", "Exam")
                        .WithMany("ExamUnits")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Graduation_proj.Models.Group", "Group")
                        .WithMany("ExamUnits")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Graduation_proj.Models.Group", b =>
                {
                    b.HasOne("Graduation_proj.Models.Topic", "Topic")
                        .WithMany("Groups")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Graduation_proj.Models.Material", b =>
                {
                    b.HasOne("Graduation_proj.Models.Doctor", "Doctor")
                        .WithMany("Materials")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Graduation_proj.Models.Problem", b =>
                {
                    b.HasOne("Graduation_proj.Models.Group", "Group")
                        .WithMany("Problems")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Graduation_proj.Models.ProblemChoice", b =>
                {
                    b.HasOne("Graduation_proj.Models.Problem", "Problem")
                        .WithMany("ProblemChoices")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");
                });

            modelBuilder.Entity("Graduation_proj.Models.Topic", b =>
                {
                    b.HasOne("Graduation_proj.Models.Material", "Material")
                        .WithMany("Topics")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Graduation_proj.Models.Doctor", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Graduation_proj.Models.Exam", b =>
                {
                    b.Navigation("ExamUnits");
                });

            modelBuilder.Entity("Graduation_proj.Models.Group", b =>
                {
                    b.Navigation("ExamUnits");

                    b.Navigation("Problems");
                });

            modelBuilder.Entity("Graduation_proj.Models.Material", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("Graduation_proj.Models.Problem", b =>
                {
                    b.Navigation("ProblemChoices");
                });

            modelBuilder.Entity("Graduation_proj.Models.Topic", b =>
                {
                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
